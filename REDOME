# PhysxMc - Minecraft物理エンジンプラグイン

## プロジェクト概要

PhysxMcは、MinecraftのPaperサーバー向けの物理エンジンプラグインです。NVIDIA PhysXライブラリを使用して、Minecraft世界にリアルタイムの物理演算を導入し、ブロックやオブジェクトの物理的な挙動を実現します。

### 🆕 新機能: コイン投擲システム
ヒマワリの種を使ったメダルゲーム風のコイン投擲システムを搭載。プレイヤーのスコアボード値を消費して物理演算されるコインを生成し、右クリックで投擲できます。カジノゲームやスキルゲーム、経済システムなど様々な用途に活用できます。

## 技術仕様

### 基本情報
- **プラットフォーム**: Paper/Bukkit (Minecraft 1.20.1対応)
- **API レベル**: 1.19+
- **物理エンジン**: NVIDIA PhysX (physx-jni 2.0.6)
- **開発言語**: Java
- **ビルドツール**: Gradle (Kotlin DSL)
- **必要な依存関係**: ProtocolLib

### 対応プラットフォーム
- Windows (natives-windows)
- Linux (natives-linux)
- macOS (natives-macos)

## 主要機能

### 1. 物理演算システム
- **リアルタイム物理計算**: 60FPS相当（毎tick 3/60秒）の物理シミュレーション
- **重力制御**: カスタムの重力設定が可能（デフォルト: 0, -19.62, 0）
- **衝突検出**: オブジェクト間の接触・衝突イベントの検出
- **トリガーシステム**: 接触検出用の透明な衝突判定

### 2. オブジェクト操作
- **Grabツール**: プレイヤーが物理オブジェクトを掴んで移動可能
- **動的オブジェクト生成**: コマンドやアイテム投擲による物理オブジェクトの生成
- **キネマティック制御**: オブジェクトの動的/静的状態の切り替え
- **コイン投擲システム**: ヒマワリの種を使ったメダルゲーム風のコイン投擲機能

### 3. 地形統合
- **チャンク単位の地形生成**: Minecraftの地形を物理エンジンに統合
- **動的ロード/アンロード**: 必要に応じたチャンクの物理地形の読み込み
- **リアルタイム更新**: ブロック変更の自動検出と地形の再構築

### 4. デバッグ機能
- **デバッグモード**: アイテム投擲による物理オブジェクト生成
- **可視化**: 物理オブジェクトのMinecraft世界での表示
- **Raycast**: 視線判定による物理オブジェクトの検出

### 5. コイン投擲システム（新機能）
- **スコアボード連動**: プレイヤーのスコアボード値を消費してコイン生成
- **ヒマワリの種コイン**: ヒマワリの種アイテムがメダルゲーム風のコインとして機能
- **右クリック投擲**: 右クリックでコインを物理演算付きで投擲
- **リアルな物理挙動**: 重力、慣性、衝突判定を持つコインの動作
- **経済システム統合**: スコアボードベースの仮想通貨システム

## コマンド一覧

### `/physxmc reset`
- **機能**: すべての物理オブジェクトをリセット
- **権限**: 管理者推奨

### `/physxmc debugmode`
- **機能**: デバッグモードの有効/無効切り替え
- **効果**: 右クリックでアイテム投擲による物理オブジェクト生成

### `/physxmc density <float>`
- **機能**: 物理オブジェクトのデフォルト密度設定
- **範囲**: 0より大きい値
- **デフォルト**: 1.0

### `/physxmc updatecurrentchunk`
- **機能**: プレイヤーの現在位置のチャンク地形をリロード
- **用途**: 手動での地形更新

### `/physxmc summon <x> <y> <z>`
- **機能**: 指定サイズのテスト物理オブジェクトを生成
- **パラメータ**: x, y, z（ブロック単位のサイズ）

### `/physxmc gravity <x> <y> <z>`
- **機能**: 重力ベクトルの設定
- **デフォルト**: (0, -19.62, 0)

### `/physxmc coin enable`
- **機能**: コイン投擲システムの有効/無効切り替え
- **説明**: プレイヤーのヒマワリの種による右クリック投擲機能を制御

### `/physxmc coin scoreboard <objective>`
- **機能**: コイン生成に使用するスコアボードオブジェクトの設定
- **例**: `/physxmc coin scoreboard money`
- **説明**: 指定したスコアボードの値を消費してコインを生成

### `/physxmc coin cost <amount>`
- **機能**: コイン1枚の生成コストを設定
- **デフォルト**: 1
- **説明**: スコアボードから消費される値を設定

## アーキテクチャ

### コアクラス

#### Physx.java
PhysXエンジンのコアコンポーネント管理
- Foundation、Physics、CPUDispatcher、デフォルトマテリアルの初期化
- リソース管理とメモリリーク防止

#### PhysxWorld.java
物理シミュレーションシーンの管理
- シーン作成・破棄
- 物理オブジェクトの追加・削除
- シミュレーションループ（tick）
- 衝突・トリガーイベントのコールバック処理

#### PhysxBox.java
個別の物理オブジェクト（箱）の実装
- 動的剛体（PxRigidDynamic）の管理
- 複数形状のアタッチ対応
- 力の適用、位置・回転制御
- スリープ状態の管理

### 統合レイヤー

#### IntegratedPhysxWorld.java
Minecraft世界との統合機能
- チャンク単位の地形管理
- 動的ロード/アンロード
- ブロック変更の検出と地形更新
- Raycast機能

#### DisplayedPhysxBox.java
Minecraft世界での物理オブジェクト表示
- BlockDisplayを使用した視覚化
- 物理状態とMinecraft表示の同期

### コイン投擲システム

#### CoinThrower.java
コイン投擲システムのメイン制御クラス
- 右クリックイベントの処理
- スコアボード値の消費と検証
- ヒマワリの種の物理コインへの変換

#### PhysxCoin.java
物理演算されるコインオブジェクトの実装
- 小さなサイズの動的剛体として実装
- 金色のヒマワリの種テクスチャを使用
- リアルなコインの物理特性（質量、摩擦、反発）

#### ScoreboardManager.java
スコアボードとの連携管理
- プレイヤーのスコア値の取得・更新
- オブジェクト名の動的設定
- 残高不足時の処理

### ユーティリティ

#### PhysxLoader.java
PhysXライブラリの動的ローディング
- アプリケーションクラスローダーへの直接ロード
- プラグインリロード対応
- ネイティブライブラリの展開

#### ConversionUtility.java
座標系とデータ形式の変換
- Minecraft ↔ PhysX座標変換
- Quaternionと角度の変換

## 設定項目

### PhysxSetting.java
- **defaultDensity**: オブジェクトのデフォルト密度（1.0f）
- **debugMode**: デバッグモードの有効/無効（false）
- **throwPower**: デバッグモードでの投擲力（20f）

### CoinSettings.java
- **coinSystemEnabled**: コイン投擲システムの有効/無効（false）
- **scoreboardObjective**: 使用するスコアボードオブジェクト名（"money"）
- **coinCost**: コイン1枚の生成コスト（1）
- **coinDensity**: コインの密度（19.32f - 金の密度）
- **coinSize**: コインのサイズ（0.1f - 小さなコイン）
- **coinThrowPower**: コイン投擲の力（15f）
- **coinLifetime**: コインの生存時間（60秒）

## コイン投擲システムの使用方法

### 基本的な使い方

1. **スコアボードの準備**
   ```
   /scoreboard objectives add money dummy "残高"
   /scoreboard players set <player> money 100
   ```

2. **システムの有効化**
   ```
   /physxmc coin enable
   /physxmc coin scoreboard money
   /physxmc coin cost 1
   ```

3. **コイン投擲**
   - ヒマワリの種を手に持つ
   - 右クリックでコインを投擲
   - スコアボードから自動的にコストが差し引かれる

### メダルゲーム風の遊び方

1. **投擲台の設置**: 高い場所にプレイヤー用の台を設置
2. **コイン受け**: 下にホッパーやチェストを配置してコインをキャッチ
3. **リワード**: コインが特定の場所に落ちた時の報酬システム
4. **物理的なギミック**: 傾斜や障害物でコインの動きを複雑化

### 応用例

- **カジノゲーム**: コイン投擲による確率ゲーム
- **スキルゲーム**: 的当てや精密投擲のミニゲーム
- **経済システム**: 物理的なコインによる取引システム
- **パーティーゲーム**: 複数プレイヤーでのコイン投擲合戦

## インストールと設定

### 必要な環境
1. Paper/Bukkitサーバー（1.20.1以降）
2. ProtocolLibプラグイン
3. Java 17以降

### インストール手順
1. リリースからプラグインJARファイルをダウンロード
2. サーバーの`plugins`フォルダに配置
3. ProtocolLibがインストールされていることを確認
4. サーバーを起動

### 初回起動時の処理
- PhysXネイティブライブラリの自動展開
- 一時ディレクトリ（`${java.io.tmpdir}/de.fabmax.physx-jni/2.0.6`）への配置
- アプリケーションクラスローダーへのライブラリ登録

## パフォーマンス考慮事項

### 最適化機能
- **チャンク単位の地形管理**: 必要な領域のみ物理計算
- **スリープシステム**: 静止オブジェクトの計算停止
- **動的ロード/アンロード**: メモリ使用量の最適化

### 推奨設定
- サーバーのTPS: 20（物理計算は60FPS相当で実行）
- メモリ: 最低4GB（大規模な物理シミュレーション時は8GB以上推奨）

## トラブルシューティング

### よくある問題
1. **PhysXライブラリが見つからない**: 
   - システムプロパティ`physx.forceCopyLibs=true`で強制再展開

2. **プラグインリロード時のクラッシュ**:
   - サーバー再起動を推奨（PhysXライブラリの再ロード制限）

3. **パフォーマンスの低下**:
   - 物理オブジェクト数の制限
   - チャンクロード範囲の調整

## 開発情報

### ビルド方法
```bash
./gradlew shadowJar
```

### 生成物
- `PhysxMc-1.0-SNAPSHOT.jar`: プラグイン本体
- `PhysxMc-1.0-SNAPSHOT-resourcepack.jar`: リソースパック（必要に応じて）

### 開発者向け情報
- 作者: kamesuta
- ライセンス: ライセンスファイル参照
- 物理エンジン: NVIDIA PhysX（Apache License 2.0）

## バージョン履歴

### 1.1-SNAPSHOT (予定)
- 🆕 **コイン投擲システム**: ヒマワリの種を使ったメダルゲーム風機能
- 🆕 **スコアボード連動**: プレイヤーのスコア値を消費してコイン生成
- 🆕 **物理コイン**: リアルな金属特性を持つコインオブジェクト
- 🆕 **右クリック投擲**: 直感的な操作でコインを投擲
- 🆕 **経済システム統合**: 仮想通貨としてのコイン機能
- ⚡ パフォーマンス最適化: 小オブジェクトの効率的な処理

### 1.0-SNAPSHOT
- 初期リリース
- 基本的な物理演算機能
- Minecraft世界との統合
- コマンドインターフェース
- デバッグ機能

---

このプラグインは、Minecraftにリアルな物理演算を導入し、従来のゲームプレイを大幅に拡張します。建築、レッドストーン、PvPなど、あらゆる場面で新しい可能性を提供します。
